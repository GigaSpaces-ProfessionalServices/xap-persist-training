<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:os-core="http://www.openspaces.org/schema/core"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/14.5/core/openspaces-core.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/14.5/remoting/openspaces-remoting.xsd">
	<!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->

	<!-- ANNOTATION AND COMPONENT SCAN CONFIGURATION -->
	<!-- Enable scan for OpenSpaces and Spring components -->
	<context:component-scan base-package="com.c123.billbuddy.events" />
	<context:component-scan base-package="com.c123.billbuddy.remoting" />
	<context:component-scan base-package="com.c123.billbuddy.model" />
	<!--  //TODO Add missing scan for the package that hold the definition of BillBuddyCustomFactoryBean & BillBuddySpaceDataSource-->


<bean id="dataSource" destroy-method="close"
  class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/custbillbuddy"/>
    <property name="username" value="root"/>
    <property name="password" value=""/>
    <property name="initialSize" value="3"/>
</bean>

	<bean id="supportedManageSpaceClasses" class="java.util.HashSet">
		<constructor-arg>
			<set>
				<value>com.c123.billbuddy.model.Merchant</value>
				<value>com.c123.billbuddy.model.User</value>
				<value>com.c123.billbuddy.model.Payment</value>
				<value>com.c123.billbuddy.model.ProcessingFee</value>
			</set>
		</constructor-arg>
	</bean>

	<bean id="billBuddySpaceDataSource" class="<// TODO Add the CustomFactoryBean full class name > " >
		<property name="managedEntries" ref="supportedManageSpaceClasses" />
		<property name="datasource" ref="<TODO add reference to database data source>" />
	</bean>

	<!-- Enables the usage of @GigaSpaceContext annotation based injection. -->
	<os-core:giga-space-context />
	
	<!-- Enables Spring Annotation configuration -->
	<context:annotation-config />

	<!-- Enables using @RemotingService as well as @ExecutorProxy (and others) 
		annotations -->
	<os-remoting:annotation-support />
	
	<!-- Enables using @PreBackup, @PostBackup and other annotations -->
	<os-core:annotation-support />
	
	<!-- SPACE CONFIGURATION -->
	<!-- A bean representing a space (an IJSpace implementation). -->
	<os-core:giga-space-late-context/>
	<os-core:space id="space" url="/./BillBuddy-space" mirror="true" schema="persistent" space-data-source="TODO add reference to the CustomFactory">
		<os-core:properties>
	        <props>
	            <!-- Use ALL IN CACHE -->
	            <prop key="space-config.engine.cache_policy">1</prop>
	            <prop key="space-config.external-data-source.usage">read-only</prop>
	            <prop key="cluster-config.cache-loader.external-data-source">true</prop>
	            <prop key="cluster-config.cache-loader.central-data-source">true</prop>
	        </props>
	    </os-core:properties>
	</os-core:space>
	<!-- OpenSpaces simplified space API built on top of IJSpace/JavaSpace. -->
	<os-core:giga-space id="gigaSpace" space="space"
		tx-manager="transactionManager"/>

	<!-- Defines a local Jini transaction manager. -->
	<os-core:distributed-tx-manager id="transactionManager" />
	
	<!-- Service exporter for exporting remote services -->
	<os-remoting:service-exporter id="serviceExporter" />
</beans>
